"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _createSuper(r){var n=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(r);return _possibleConstructorReturn(this,n?(e=_getPrototypeOf(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function _iterableToArrayLimit(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i=[],l=!0,a=!1;try{for(r=r.call(e);!(l=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);l=!0);}catch(e){a=!0,o=e}finally{try{l||null==r.return||r.return()}finally{if(a)throw o}}return i}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}var headerEl=document.querySelector("header"),headerDropDownParents=document.querySelectorAll(".header__list__item"),headerDropDownEl=document.querySelectorAll("ul.header__list__dropdown-content"),headerNav=document.querySelector(".header__nav"),overlayShadowEl=document.querySelector("div.overlay-shadow"),btnHamburger=document.querySelector(".header__hamburger"),btnLanToggler=headerEl.querySelector("button.header__btn--lan--toggler"),containerLanOptions=headerEl.querySelector("ul.header__lan__options"),sectionHero=document.querySelector(".hero"),containerHeroSlider=document.querySelector(".hero__slider__cn"),heroSlides=Array.from(containerHeroSlider.children),containerHeroSliderDots=document.querySelector(".hero__slider__nav"),heroSliderDots=Array.from(containerHeroSliderDots.children),containerGallerySlider=document.querySelector("ul.gallery__carousel__cn"),gallerySlides=Array.from(containerGallerySlider.children),btnGallerySlideLeft=document.querySelector("button.gallery__carousel__controller--left"),btnGallerySlideRight=document.querySelector("button.gallery__carousel__controller--right"),containerBooksSlider=document.querySelector("ul.books__carousel__cn"),booksSlides=Array.from(containerBooksSlider.children),btnBooksSliderRight=document.querySelector("button.books__carousel__action--right"),btnBooksSliderLeft=document.querySelector("button.books__carousel__action--left"),containerIntroSlider=document.querySelector("ul.intro__carousel__cn"),introSlides=Array.from(containerIntroSlider.children),btnIntroSliderRight=document.querySelector("button.intro__carousel__indicator--right"),btnIntroSliderLeft=document.querySelector("button.intro__carousel__indicator--left"),containerSchoolSlider=document.querySelector("ul.school__carousel__cn"),schoolSlides=Array.from(containerSchoolSlider.children),containerSchoolDots=document.querySelector("div.school__carousel__indicators"),schoolDots=Array.from(containerSchoolDots.children),containerNewsSlider=document.querySelector("ul.news__carousel__cn"),newsSlides=Array.from(containerNewsSlider.children),btnNewsSliderRight=document.querySelector("button.news__carousel__ind--right"),btnNewsSliderLeft=document.querySelector("button.news__carousel__ind--left"),containerArticleSlider=document.querySelector("ul.article__carousel__cn"),articleSlides=Array.from(containerArticleSlider.children),containerArticleDots=document.querySelector(".article__carousel__indicators"),articleDots=Array.from(containerArticleDots.children),footerNavList=document.querySelector("ul.footer__link"),footerFormCn=document.querySelector("div.footer__section--form__cn"),btnFooterListToggler=document.querySelector("button.footer__section__toggle-btn--links"),btnFooterFormToggler=document.querySelector("button.footer__section__toggle-btn--form"),breakPoints={sm:576,md:768,lg:992,xl:1200,xxl:1400},getViewPort=function(){return Math.max(document.documentElement.clientWidth,window.innerWidth)},Accordion=function(){function n(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;_classCallCheck(this,n),this._controller=e,this._content=t,this._padding=r&&r+"rem",this._setInitial(),this._controller.addEventListener("click",this._toggle.bind(this))}return _createClass(n,[{key:"_isActive",value:function(){return!this._content.style.maxHeight}},{key:"_setInitial",value:function(){this._content.classList.add("accordion--hidden")}},{key:"_toggle",value:function(){this._isActive.call(this)?(this._content.style.maxHeight=this._content.scrollHeight+"px",this._content.style.padding=this._padding):(this._content.style.maxHeight=null,this._content.style.padding=null)}}]),n}(),Navigation=function(){function e(){_classCallCheck(this,e),this._isActive=!1,btnHamburger.addEventListener("click",this._toggle.bind(this)),overlayShadowEl.addEventListener("click",this._close.bind(this)),window.addEventListener("resize",function(e){e.target.innerWidth>breakPoints.md&&(headerNav.style.transform="translateX(0)")})}return _createClass(e,[{key:"_toggle",value:function(){this._isActive=!this._isActive,this._isActive?(headerNav.style.transform="translateX(0)",overlayShadowEl.style.display="block"):(headerNav.style.transform="translateX(120%)",overlayShadowEl.style.display="none")}},{key:"_close",value:function(){this._isActive=!1,headerNav.style.transform="translateX(120%)",overlayShadowEl.style.display="none"}}]),e}(),StickyHeader=function(){function e(){_classCallCheck(this,e),this._observer=new IntersectionObserver(this._stickHeader,{root:null,threshold:0,rootMargin:"0px"}),this._observer.observe(sectionHero)}return _createClass(e,[{key:"_stickHeader",value:function(e){_slicedToArray(e,1)[0].isIntersecting?headerEl.classList.remove("sticky-header"):headerEl.classList.add("sticky-header")}}]),e}(),Language=function(){function e(){var t=this;_classCallCheck(this,e),this._active=!1,this._currentImg="iran.png",this._currentValue="fa",this._optionBtn=Array.from(containerLanOptions.querySelectorAll("button")),this._updateBtn(this._currentImg),this._hideOptions(),btnLanToggler.addEventListener("click",this._toggleOptions.bind(this)),this._optionBtn.forEach(function(e){return e.addEventListener("click",t._changeData.bind(t))})}return _createClass(e,[{key:"_hideOptions",value:function(){containerLanOptions.style.opacity=0,setTimeout(function(){return containerLanOptions.style.display="none"},1e3)}},{key:"_showOptions",value:function(){containerLanOptions.style.display="block",containerLanOptions.style.opacity=1}},{key:"_toggleOptions",value:function(){this._active=!this._active,this._active?this._showOptions():this._hideOptions()}},{key:"_updateBtn",value:function(e){e="./images/".concat(e);btnLanToggler.querySelector("img").src=e}},{key:"_changeData",value:function(e){e=e.target.closest("button");this._currentImg=e.dataset.flag,this._currentValue=e.dataset.value,this._updateBtn(this._currentImg)}}]),e}(),Slider=function(){function i(e,t){var r=this,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,o=3<arguments.length&&void 0!==arguments[3]&&arguments[3];_classCallCheck(this,i),this._parent=e,this._slides=t,this._margin=n,this._buttons=o,this._setPosition(n),window.addEventListener("resize",this._setPosition.bind(this,n)),this._buttons&&(this._buttons[1].addEventListener("click",function(){return r.move.call(r,"next")}),this._buttons[0].addEventListener("click",function(){return r.move.call(r,"prev")}))}return _createClass(i,[{key:"_getSlideWidth",value:function(){return this._slides[0].getBoundingClientRect().width}},{key:"_setSlidePosition",value:function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;e.style.left=this._getSlideWidth()*t+r+"px"}},{key:"_setPosition",value:function(r){var n=this;this._slides.forEach(function(e,t){return n._setSlidePosition(e,t,r)})}},{key:"_identifyTarget",value:function(e,t){return"next"===e?t.nextElementSibling:"prev"===e?t.previousElementSibling:e}},{key:"_resetSlider",value:function(){this._slides.forEach(function(e){return e.dataset.current="false"}),this._slides[0].dataset.current="true",this.move(this._slides[0])}},{key:"_transformParent",value:function(e){this._parent.style.transform="translateX(-".concat(e,")")}},{key:"move",value:function(e){var t=this._parent.querySelector('li[data-current="true"]'),r=this._identifyTarget(e,t);r?(e=r.style.left,this._transformParent(e),t.dataset.current="false",r.dataset.current="true"):this._resetSlider()}}]),i}(),SliderWithInd=function(){_inherits(a,Slider);var l=_createSuper(a);function a(e,t){var r,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,o=3<arguments.length&&void 0!==arguments[3]&&arguments[3],i=4<arguments.length?arguments[4]:void 0;return _classCallCheck(this,a),(r=l.call(this,e,t,n,o))._indCn=i,r._indicators,r._createIndicators(),r._indCn.addEventListener("click",function(e){"button"===e.target.localName&&(r.move.call(_assertThisInitialized(r),r._slides[r._getIndex(e)]),r._update.call(_assertThisInitialized(r)))}),r}return _createClass(a,[{key:"_getClass",value:function(){return this._indCn.firstElementChild.classList[0]+"--current"}},{key:"_insertIndicator",value:function(e,t){e=e.cloneNode();e.dataset.target=t,this._indCn.appendChild(e)}},{key:"_createIndicators",value:function(){var e=this._indCn,t=this._insertIndicator,r=this._slides,n=this._getClass,o=e.firstElementChild;e.innerHTML="";for(var i=0;i<r.length;i++)t.call(this,o,i);this._indicators=Array.from(this._indCn.children);n=n.call(this);this._indicators[0].classList.add(n)}},{key:"_getIndex",value:function(e){return e.target.closest("button").dataset.target}},{key:"_update",value:function(){var t=this._getClass.call(this);this._indicators.forEach(function(e){return e.classList.remove(t)});var e=Math.abs(this._slides.findIndex(function(e){return"true"===e.dataset.current}));this._indicators[e].classList.add(t)}}]),a}();new Language,headerDropDownParents.forEach(function(e){e.querySelector("ul")&&new Accordion(e.querySelector(".header__list__item__title"),e.querySelector("ul.header__list__dropdown-content"))}),getViewPort()<breakPoints.md&&(new Accordion(btnFooterListToggler,footerNavList,!1),new Accordion(btnFooterFormToggler,footerFormCn,!1));var navigation=new Navigation,stickyHeader=new StickyHeader,pageSlidersData=[[containerHeroSlider,heroSlides,!1,containerHeroSliderDots],[containerGallerySlider,gallerySlides,[btnGallerySlideLeft,btnGallerySlideRight],!1],[containerBooksSlider,booksSlides,[btnBooksSliderLeft,btnBooksSliderRight],!1,5],[containerIntroSlider,introSlides,[btnIntroSliderLeft,btnIntroSliderRight],!1,5],[containerSchoolSlider,schoolSlides,!1,containerSchoolDots],[containerNewsSlider,newsSlides,[btnNewsSliderLeft,btnNewsSliderRight],!1],[containerArticleSlider,articleSlides,!1,containerArticleDots]],activateSlider=function(e,t,r,n){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0;n?new SliderWithInd(e,t,o,r,n):new Slider(e,t,o,r)};pageSlidersData.forEach(function(e){return activateSlider.apply(void 0,_toConsumableArray(e))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
